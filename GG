gg.alert("Sᴀꜰᴇ Sᴄʀɪᴘᴛ\nWᴏʀᴋ Wɪᴛʜᴏᴜᴛ Aɴᴛɪʙᴀɴ\nSᴜᴘᴘᴏʀᴛ ᴀʟʟ Pᴜʙɢ\nTᴇʟᴇ : @antiban_plus")

function SearchWrite(Search, Write, Type)    gg.clearResults()    gg.setVisible(false)    gg.searchNumber(Search[1][1], Type)    local count = gg.getResultCount()    local result = gg.getResults(count)    gg.clearResults()    local data = {}     local base = Search[1][2]    if (count > 0) then        for i, v in ipairs(result) do            v.isUseful = true         end        for k=2, #Search do            local tmp = {}            local offset = Search[k][2] - base             local num = Search[k][1]                         for i, v in ipairs(result) do                tmp[#tmp+1] = {}                 tmp[#tmp].address = v.address + offset                  tmp[#tmp].flags = v.flags              end            tmp = gg.getValues(tmp)             for i, v in ipairs(tmp) do                if ( tostring(v.value) ~= tostring(num) ) then                    result[i].isUseful = false                 end            end        end        for i, v in ipairs(result) do            if (v.isUseful) then                data[#data+1] = v.address            end        end        if (#data > 0) then           local t = {}           local base = Search[1][2]           for i=1, #data do               for k, w in ipairs(Write) do                   offset = w[2] - base                   t[#t+1] = {}                   t[#t].address = data[i] + offset                   t[#t].flags = Type                   t[#t].value = w[1]                   if (w[3] == true) then                      local item = {}                       item[#item+1] = t[#t]                       item[#item].freeze = true                       gg.addListItems(item)                   end                                 end           end           gg.setValues(t)           gg.addListItems(t)        else            gg.toast("Nx here .", false)            return false        end    else        gg.toast("Vᴀʟᴜᴇs Nᴏᴛ Fᴏᴜɴᴅ")        return false    end end
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString)) break end nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len(szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) xgsl = xgsl + 1 end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) xgjg = true end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "" .. xgsl .. "") else gg.toast(qmnb[2]["name"] .. "") end end end end

function Main()
MN1 = gg.multiChoice({
 "Lᴇꜱꜱ Rᴇᴄᴏɪʟ",
 "Aɴᴛɪ Sʜᴀᴋᴇ",
 "Mᴀɢɪᴄ Bᴜʟʟᴇᴛ",
 "Sᴍᴀʟʟ Cʀᴏꜱꜱʜᴀɪʀ",
 "Wɪᴅᴇ Vɪᴇᴡ",
 "Rᴇᴍᴏᴠᴇ Fᴏɢ",
 "Rᴇᴍᴏᴠᴇ Gʀᴀꜱꜱ",
 "Exɪᴛ"}, nil, (os.date("%A %d %B %Y %H:%M%p")))
if MN1 == nil then else
if MN1[1] == true then a() end
if MN1[2] == true then b() end
if MN1[3] == true then c() end
if MN1[4] == true then d() end
if MN1[5] == true then e() end
if MN1[6] == true then f() end
if MN1[7] == true then g() end
if MN1[8] == true then Exit() end
end
WKWKXZ = -1
end

function a()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = -2.786982e28, ["type"] = 16},
{["lv"] = -6.1550321e27, ["offset"] = -8, ["type"] = 16},
{["lv"] = -5.7270187e27, ["offset"] = -4, ["type"] = 16},
}
qmxg = {
{["value"] = 0, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function b()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = -1.1144502e28, ["type"] = 16},
{["lv"] = 6.1629773e-33, ["offset"] = -100, ["type"] = 16},
{["lv"] = -1.2457491e21, ["offset"] = -96, ["type"] = 16},
}
qmxg = {
{["value"] = 0, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = -1.1144502e28, ["type"] = 16},
{["lv"] = -3.8369228e21, ["offset"] = -80, ["type"] = 16},
{["lv"] = -4.2711351e26, ["offset"] = -72, ["type"] = 16},
}
qmxg = {
{["value"] = 0, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function c()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = 0.10000000149, ["type"] = 16},
{["lv"] = -7.1081197e31, ["offset"] = -96, ["type"] = 16},
{["lv"] = -1.5384485e31, ["offset"] = -88, ["type"] = 16},
}
qmxg = {
{["value"] = 50, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function d()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = 3.8126822e-21, ["type"] = 16},
{["lv"] = 5.0487104e-29, ["offset"] = -100, ["type"] = 16},
{["lv"] = 4.5122613e-30, ["offset"] = -96, ["type"] = 16},
}
qmxg = {
{["value"] = 0, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function e()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = 360, ["type"] = 16},
{["lv"] = 6.2587702e-37, ["offset"] = 8, ["type"] = 16},
{["lv"] = -1.8788503e26, ["offset"] = 24, ["type"] = 16},
}
qmxg = {
{["value"] = 300, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function f()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = -1.3620439e28, ["type"] = 16},
{["lv"] = -3.6893506e20, ["offset"] = -68, ["type"] = 16},
{["lv"] = -3.6907931e20, ["offset"] = -64, ["type"] = 16},
}
qmxg = {
{["value"] = 0, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function g()
qmnb = {
{["memory"] = 16384},
{["name"] = "https://t.me/antiban_plus"},
{["value"] = -3.892263e21, ["type"] = 16},
{["lv"] = -5.5746621e27, ["offset"] = -96, ["type"] = 16},
{["lv"] = -2.786982e28, ["offset"] = -92, ["type"] = 16},
}
qmxg = {
{["value"] = 0, ["offset"] = 0, ["type"] = 16},

}
xqmnb(qmnb)
end

function Exit()
  print('Thanks For Supporting Us .')
  gg.skipRestoreState()
  gg.setVisible(true)
  os.exit()
end

while true do
  if gg.isVisible(true) then
    WKWKXZ = 1
    gg.setVisible(false)
  end
  gg.clearResults()
  if WKWKXZ == 1 then
    Main()
  end
end
